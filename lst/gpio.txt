; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\obj\gpio.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\gpio.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I.\ -I..\..\..\..\Library\CMSIS\Include -I..\..\..\..\Library\Device\Nuvoton\NUC121\Include -I..\..\..\..\Library\StdDriver\inc -IC:\Keil_v5\ARM\ARM\RV31\INC -IC:\Keil_v5\ARM\ARM\CMSIS\Include -IC:\Keil_v5\ARM\ARM\INC\?ST\STM32F10x -D__MICROLIB -D__UVISION_VERSION=529 --omf_browse=.\obj\gpio.crf StdDriver\src\gpio.c]
                          THUMB

                          AREA ||i.GPIO_DisableInt||, CODE, READONLY, ALIGN=2

                  GPIO_DisableInt PROC
;;;96      */
;;;97     void GPIO_DisableInt(GPIO_T *port, uint32_t u32Pin)
000000  6982              LDR      r2,[r0,#0x18]
;;;98     {
;;;99         /* Configure interrupt mode of specified pin */
;;;100        port->INTTYPE &= ~(1UL << u32Pin);
000002  2301              MOVS     r3,#1
000004  408b              LSLS     r3,r3,r1
000006  439a              BICS     r2,r2,r3
000008  6182              STR      r2,[r0,#0x18]
;;;101    
;;;102        /* Disable interrupt function of specified pin */
;;;103        port->INTEN &= ~((0x00010001UL) << u32Pin);
00000a  69c3              LDR      r3,[r0,#0x1c]
00000c  4a02              LDR      r2,|L1.24|
00000e  408a              LSLS     r2,r2,r1
000010  4393              BICS     r3,r3,r2
000012  61c3              STR      r3,[r0,#0x1c]
;;;104    }
000014  4770              BX       lr
;;;105    
                          ENDP

000016  0000              DCW      0x0000
                  |L1.24|
                          DCD      0x00010001

                          AREA ||i.GPIO_EnableInt||, CODE, READONLY, ALIGN=1

                  GPIO_EnableInt PROC
;;;70      */
;;;71     void GPIO_EnableInt(GPIO_T *port, uint32_t u32Pin, uint32_t u32IntAttribs)
000000  b510              PUSH     {r4,lr}
;;;72     {
;;;73         /* Configure interrupt mode of specified pin */
;;;74         port->INTTYPE |= (((u32IntAttribs >> 24) & 0xFFUL) << u32Pin);
000002  6984              LDR      r4,[r0,#0x18]
000004  0e13              LSRS     r3,r2,#24
000006  408b              LSLS     r3,r3,r1
000008  431c              ORRS     r4,r4,r3
00000a  6184              STR      r4,[r0,#0x18]
;;;75     
;;;76         /* Enable interrupt function of specified pin */
;;;77         port->INTEN |= ((u32IntAttribs & 0xFFFFFFUL) << u32Pin);
00000c  69c3              LDR      r3,[r0,#0x1c]
00000e  0214              LSLS     r4,r2,#8
000010  0a24              LSRS     r4,r4,#8
000012  408c              LSLS     r4,r4,r1
000014  4323              ORRS     r3,r3,r4
000016  61c3              STR      r3,[r0,#0x1c]
;;;78     }
000018  bd10              POP      {r4,pc}
;;;79     
                          ENDP


                          AREA ||i.GPIO_SetMode||, CODE, READONLY, ALIGN=1

                  GPIO_SetMode PROC
;;;40      */
;;;41     void GPIO_SetMode(GPIO_T *port, uint32_t u32PinMask, uint32_t u32Mode)
000000  b570              PUSH     {r4-r6,lr}
;;;42     {
000002  4603              MOV      r3,r0
;;;43         uint32_t i;
;;;44     
;;;45         for (i = 0; i < GPIO_PIN_MAX; i++) {
000004  2000              MOVS     r0,#0
000006  e00f              B        |L3.40|
                  |L3.8|
;;;46             if (u32PinMask & (1 << i)) {
000008  2401              MOVS     r4,#1
00000a  4084              LSLS     r4,r4,r0
00000c  400c              ANDS     r4,r4,r1
00000e  2c00              CMP      r4,#0
000010  d009              BEQ      |L3.38|
;;;47                 port->MODE = (port->MODE & ~(0x3 << (i << 1))) | (u32Mode << (i << 1));
000012  681c              LDR      r4,[r3,#0]
000014  0046              LSLS     r6,r0,#1
000016  2503              MOVS     r5,#3
000018  40b5              LSLS     r5,r5,r6
00001a  43ac              BICS     r4,r4,r5
00001c  0046              LSLS     r6,r0,#1
00001e  4615              MOV      r5,r2
000020  40b5              LSLS     r5,r5,r6
000022  432c              ORRS     r4,r4,r5
000024  601c              STR      r4,[r3,#0]
                  |L3.38|
000026  1c40              ADDS     r0,r0,#1              ;45
                  |L3.40|
000028  2810              CMP      r0,#0x10              ;45
00002a  d3ed              BCC      |L3.8|
;;;48             }
;;;49         }
;;;50     }
00002c  bd70              POP      {r4-r6,pc}
;;;51     
                          ENDP


;*** Start embedded assembler ***

#line 1 "StdDriver\\src\\gpio.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_gpio_c_f8f858a7____REV16|
#line 388 ".\\CMSIS\\cmsis_armcc.h"
|__asm___6_gpio_c_f8f858a7____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_gpio_c_f8f858a7____REVSH|
#line 402
|__asm___6_gpio_c_f8f858a7____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
